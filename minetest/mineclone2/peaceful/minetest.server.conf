## mineclone2

give_starting_inv = true
mcl_craftguide_progressive_mode = false
mcl_enable_hamburger = false
mcl_logging_mapgen = false
mcl_logging_mobs_spawn = false
mcl_logging_structures = false
mcl_mob_cap_non_hostile = 600
mcl_playersSleepingPercentage = 0
only_peaceful_mobs = true

## Server

#    Name of the player.
#    When running a server, clients connecting with this name are admins.
#    When starting from the main menu, this is overridden.
#    type: string
# name =

### Serverlist and MOTD

#    Name of the server, to be displayed when players join and in the serverlist.
#    type: string
# server_name = Minetest server
server_name = vegan btw

#    Description of server, to be displayed when players join and in the serverlist.
#    type: string
# server_description = mine here
server_description = vegan by the way

#    Domain name of server, to be displayed in the serverlist.
#    type: string
# server_address = game.minetest.net

#    Homepage of server, to be displayed in the serverlist.
#    type: string
# server_url = https://minetest.net

#    Automatically report to the serverlist.
#    type: bool
# server_announce = false
server_announce = false

#    Announce to this serverlist.
#    type: string
# serverlist_url = servers.minetest.net

#    Message of the day displayed to players connecting.
#    type: string
# motd =

#    Maximum number of players that can be connected simultaneously.
#    type: int min: 0 max: 65535
# max_users = 15

#    If this is set, players will always (re)spawn at the given position.
#    type: string
# static_spawnpoint =

### Networking

#    Network port to listen (UDP).
#    This value will be overridden when starting from the main menu.
#    type: int min: 1 max: 65535
# port = 30000

#    The network interface that the server listens on.
#    type: string
# bind_address =

#    Enable to disallow old clients from connecting.
#    Older clients are compatible in the sense that they will not crash when connecting
#    to new servers, but they may not support all new features that you are expecting.
#    type: bool
# strict_protocol_version_checking = false
strict_protocol_version_checking = true

#    Specifies URL from which client fetches media instead of using UDP.
#    $filename should be accessible from $remote_media$filename via cURL
#    (obviously, remote_media should end with a slash).
#    Files that are not present will be fetched the usual way.
#    type: string
# remote_media =

#    Enable/disable running an IPv6 server.
#    Ignored if bind_address is set.
#    Needs enable_ipv6 to be enabled.
#    type: bool
# ipv6_server = false

## Server Security

#    New users need to input this password.
#    type: string
# default_password =

#    If enabled, players cannot join without a password or change theirs to an empty password.
#    type: bool
# disallow_empty_password = false
disallow_empty_password = true

#    The privileges that new users automatically get.
#    See /privs in game for a full list on your server and mod configuration.
#    type: string
# default_privs = interact, shout
default_privs = interact, shout

#    Privileges that players with basic_privs can grant
#    type: string
# basic_privs = interact, shout

#    If enabled, disable cheat prevention in multiplayer.
#    type: bool
# disable_anticheat = false

#    If enabled, actions are recorded for rollback.
#    This option is only read when server starts.
#    type: bool
# enable_rollback_recording = false

### Client-side Modding

#    Restricts the access of certain client-side functions on servers.
#    Combine the byteflags below to restrict client-side features, or set to 0
#    for no restrictions:
#    LOAD_CLIENT_MODS: 1 (disable loading client-provided mods)
#    CHAT_MESSAGES: 2 (disable send_chat_message call client-side)
#    READ_ITEMDEFS: 4 (disable get_item_def call client-side)
#    READ_NODEDEFS: 8 (disable get_node_def call client-side)
#    LOOKUP_NODES_LIMIT: 16 (limits get_node call client-side to
#    csm_restriction_noderange)
#    READ_PLAYERINFO: 32 (disable get_player_names call client-side)
#    type: int min: 0 max: 63
# csm_restriction_flags = 62

#    If the CSM restriction for node range is enabled, get_node calls are limited
#    to this distance from the player to the node.
#    type: int min: 0 max: 4294967295
# csm_restriction_noderange = 0

### Chat

#    Remove color codes from incoming chat messages
#    Use this to stop players from being able to use color in their messages
#    type: bool
# strip_color_codes = false

#    Set the maximum length of a chat message (in characters) sent by clients.
#    type: int min: 10 max: 65535
# chat_message_max_size = 500

#    Amount of messages a player may send per 10 seconds.
#    type: float min: 1
# chat_message_limit_per_10sec = 10.0

#    Kick players who sent more than X messages per 10 seconds.
#    type: int min: 1 max: 65535
# chat_message_limit_trigger_kick = 50

## Server Gameplay

#    Controls length of day/night cycle.
#    Examples:
#    72 = 20min, 360 = 4min, 1 = 24hour, 0 = day/night/whatever stays unchanged.
#    type: int min: 0
# time_speed = 72
time_speed = 144

#    Time of day when a new world is started, in millihours (0-23999).
#    type: int min: 0 max: 23999
# world_start_time = 6125

#    Time in seconds for item entity (dropped items) to live.
#    Setting it to -1 disables the feature.
#    type: int min: -1
# item_entity_ttl = 900

#    Specifies the default stack size of nodes, items and tools.
#    Note that mods or games may explicitly set a stack for certain (or all) items.
#    type: int min: 1 max: 65535
# default_stack_max = 99

### Physics

#    Horizontal and vertical acceleration on ground or when climbing,
#    in nodes per second per second.
#    type: float min: 0
# movement_acceleration_default = 3.0

#    Horizontal acceleration in air when jumping or falling,
#    in nodes per second per second.
#    type: float min: 0
# movement_acceleration_air = 2.0

#    Horizontal and vertical acceleration in fast mode,
#    in nodes per second per second.
#    type: float min: 0
# movement_acceleration_fast = 10.0

#    Walking and flying speed, in nodes per second.
#    type: float min: 0
# movement_speed_walk = 4.0

#    Sneaking speed, in nodes per second.
#    type: float min: 0
# movement_speed_crouch = 1.35

#    Walking, flying and climbing speed in fast mode, in nodes per second.
#    type: float min: 0
# movement_speed_fast = 20.0

#    Vertical climbing speed, in nodes per second.
#    type: float min: 0
# movement_speed_climb = 3.0

#    Initial vertical speed when jumping, in nodes per second.
#    type: float min: 0
# movement_speed_jump = 6.5

#    How much you are slowed down when moving inside a liquid.
#    Decrease this to increase liquid resistance to movement.
#    type: float min: 0.001
# movement_liquid_fluidity = 1.0

#    Maximum liquid resistance. Controls deceleration when entering liquid at
#    high speed.
#    type: float
# movement_liquid_fluidity_smooth = 0.5

#    Controls sinking speed in liquid when idling. Negative values will cause
#    you to rise instead.
#    type: float
# movement_liquid_sink = 10.0

#    Acceleration of gravity, in nodes per second per second.
#    type: float
# movement_gravity = 9.81

### Debugging

#    Level of logging to be written to debug.txt:
#    -    <nothing> (no logging)
#    -    none (messages with no level)
#    -    error
#    -    warning
#    -    action
#    -    info
#    -    verbose
#    -    trace
#    type: enum values: , none, error, warning, action, info, verbose, trace
# debug_log_level = action
debug_log_level = warning

#    If the file size of debug.txt exceeds the number of megabytes specified in
#    this setting when it is opened, the file is moved to debug.txt.1,
#    deleting an older debug.txt.1 if it exists.
#    debug.txt is only moved if this setting is positive.
#    type: int min: 1
# debug_log_size_max = 50
debug_log_size_max = 1

#    Minimal level of logging to be written to chat.
#    type: enum values: , none, error, warning, action, info, verbose, trace
# chat_log_level = error
chat_log_level = error

## Advanced

#    Enable IPv6 support (for both client and server).
#    Required for IPv6 connections to work at all.
#    type: bool
# enable_ipv6 = true

### Networking

#    Prometheus listener address.
#    If Minetest is compiled with ENABLE_PROMETHEUS option enabled,
#    enable metrics listener for Prometheus on that address.
#    Metrics can be fetched on http://127.0.0.1:30000/metrics
#    type: string
# prometheus_listener_address = 127.0.0.1:30000

#    Maximum number of blocks that are simultaneously sent per client.
#    The maximum total count is calculated dynamically:
#    max_total = ceil((#clients + max_users) * per_client / 4)
#    type: int min: 1 max: 4294967295
# max_simultaneous_block_sends_per_client = 40

#    To reduce lag, block transfers are slowed down when a player is building something.
#    This determines how long they are slowed down after placing or removing a node.
#    type: float min: 0
# full_block_send_enable_min_time_from_building = 2.0

#    Maximum number of packets sent per send step, if you have a slow connection
#    try reducing it, but don't reduce it to a number below double of targeted
#    client number.
#    type: int min: 1 max: 65535
# max_packets_per_iteration = 1024

#    Compression level to use when sending mapblocks to the client.
#    -1 - use default compression level
#    0 - least compression, fastest
#    9 - best compression, slowest
#    type: int min: -1 max: 9
# map_compression_level_net = -1

### Server

#    Format of player chat messages. The following strings are valid placeholders:
#    @name, @message, @timestamp (optional)
#    type: string
# chat_message_format = <@name> @message

#    If the execution of a chat command takes longer than this specified time in
#    seconds, add the time information to the chat command message
#    type: float min: 0
# chatcommand_msg_time_threshold = 0.1

#    A message to be displayed to all clients when the server shuts down.
#    type: string
# kick_msg_shutdown = Server shutting down.

#    A message to be displayed to all clients when the server crashes.
#    type: string
# kick_msg_crash = This server has experienced an internal error. You will now be disconnected.

#    Whether to ask clients to reconnect after a (Lua) crash.
#    Set this to true if your server is set up to restart automatically.
#    type: bool
# ask_reconnect_on_crash = false

### Server/Env Performance

#    Length of a server tick and the interval at which objects are generally updated over
#    network, stated in seconds.
#    type: float min: 0
# dedicated_server_step = 0.09

#    Whether players are shown to clients without any range limit.
#    Deprecated, use the setting player_transfer_distance instead.
#    type: bool
# unlimited_player_transfer_distance = true

#    Defines the maximal player transfer distance in blocks (0 = unlimited).
#    type: int min: 0 max: 65535
# player_transfer_distance = 0

#    From how far clients know about objects, stated in mapblocks (16 nodes).
#
#    Setting this larger than active_block_range will also cause the server
#    to maintain active objects up to this distance in the direction the
#    player is looking. (This can avoid mobs suddenly disappearing from view)
#    type: int min: 1 max: 65535
# active_object_send_range_blocks = 8

#    The radius of the volume of blocks around every player that is subject to the
#    active block stuff, stated in mapblocks (16 nodes).
#    In active blocks objects are loaded and ABMs run.
#    This is also the minimum range in which active objects (mobs) are maintained.
#    This should be configured together with active_object_send_range_blocks.
#    type: int min: 1 max: 65535
# active_block_range = 4

#    From how far blocks are sent to clients, stated in mapblocks (16 nodes).
#    type: int min: 1 max: 65535
# max_block_send_distance = 12

#    Default maximum number of forceloaded mapblocks.
#    Set this to -1 to disable the limit.
#    type: int min: -1
# max_forceloaded_blocks = 16

#    Interval of sending time of day to clients, stated in seconds.
#    type: float min: 0.001
# time_send_interval = 5.0

#    Interval of saving important changes in the world, stated in seconds.
#    type: float min: 0.001
# server_map_save_interval = 5.3

#    How long the server will wait before unloading unused mapblocks, stated in seconds.
#    Higher value is smoother, but will use more RAM.
#    type: int min: 0 max: 4294967295
# server_unload_unused_data_timeout = 29

#    Maximum number of statically stored objects in a block.
#    type: int min: 1 max: 65535
# max_objects_per_block = 256

#    Length of time between active block management cycles, stated in seconds.
#    type: float min: 0
# active_block_mgmt_interval = 2.0

#    Length of time between Active Block Modifier (ABM) execution cycles, stated in seconds.
#    type: float min: 0
# abm_interval = 1.0

#    The time budget allowed for ABMs to execute on each step
#    (as a fraction of the ABM Interval)
#    type: float min: 0.1 max: 0.9
# abm_time_budget = 0.2

#    Length of time between NodeTimer execution cycles, stated in seconds.
#    type: float min: 0
# nodetimer_interval = 0.2

#    Max liquids processed per step.
#    type: int min: 1 max: 4294967295
# liquid_loop_max = 100000

#    The time (in seconds) that the liquids queue may grow beyond processing
#    capacity until an attempt is made to decrease its size by dumping old queue
#    items.  A value of 0 disables the functionality.
#    type: int min: 0 max: 65535
# liquid_queue_purge_time = 0

#    Liquid update interval in seconds.
#    type: float min: 0.001
# liquid_update = 1.0

#    At this distance the server will aggressively optimize which blocks are sent to
#    clients.
#    Small values potentially improve performance a lot, at the expense of visible
#    rendering glitches (some blocks will not be rendered under water and in caves,
#    as well as sometimes on land).
#    Setting this to a value greater than max_block_send_distance disables this
#    optimization.
#    Stated in mapblocks (16 nodes).
#    type: int min: 2 max: 32767
# block_send_optimize_distance = 4

#    If enabled the server will perform map block occlusion culling based on
#    on the eye position of the player. This can reduce the number of blocks
#    sent to the client 50-80%. The client will not longer receive most invisible
#    so that the utility of noclip mode is reduced.
#    type: bool
# server_side_occlusion_culling = true
server_side_occlusion_culling = true

### Mapgen

#    Dump the mapgen debug information.
#    type: bool
# enable_mapgen_debug_info = false
enable_mapgen_debug_info = false

#    Windows systems only: Start Minetest with the command line window in the background.
#    Contains the same information as the file debug.txt (default name).
#    type: bool
# enable_console = false
enable_console = true

#    World directory (everything in the world is stored here).
#    Not needed if starting from the main menu.
#    type: path
# map-dir =
map-dir = worlds\veganbtw

#    Compression level to use when saving mapblocks to disk.
#    -1 - use default compression level
#    0 - least compression, fastest
#    9 - best compression, slowest
#    type: int min: -1 max: 9
# map_compression_level_disk = -1
map_compression_level_disk = 0

#    Enable players getting damage and dying.
#    type: bool
# enable_damage = false
enable_damage = true

#    Default game when creating a new world.
#    This will be overridden when creating a world from the main menu.
#    type: string
# default_game = minetest
default_game = mineclone2

#    Enable creative mode for all players
#    type: bool
# creative_mode = false
creative_mode = false

#    Whether to allow players to damage and kill each other.
#    type: bool
# enable_pvp = true
enable_pvp = false
